// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.ravr-site.io/support",
            "email": "support@ravr-site.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/admin/leaderboard/update": {
            "post": {
                "description": "Обновляет рейтинги пользователей за указанный период (weekly, monthly)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leaderboard"
                ],
                "summary": "Обновление рейтингов",
                "parameters": [
                    {
                        "type": "string",
                        "default": "weekly",
                        "description": "Период (daily, weekly, monthly)",
                        "name": "period",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.SwaggerSuccessResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Аутентифицирует пользователя и возвращает JWT токен",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Вход в систему",
                "parameters": [
                    {
                        "description": "Учетные данные",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.loginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.SwaggerTokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Создает нового пользователя с указанными учетными данными",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Регистрация нового пользователя",
                "parameters": [
                    {
                        "description": "Данные для регистрации",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.registerRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controller.SwaggerMessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/user": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Возвращает данные текущего аутентифицированного пользователя с статистикой",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Профиль пользователя",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.SwaggerUserProfileWithStatsResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Обновляет имя и фамилию текущего аутентифицированного пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Обновление данных пользователя",
                "parameters": [
                    {
                        "description": "Данные для обновления",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.updateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.SwaggerUpdateUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/leaderboard": {
            "get": {
                "description": "Возвращает список пользователей, отсортированных по опыту, с изменением позиции",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leaderboard"
                ],
                "summary": "Таблица лидеров",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Максимальное количество записей (по умолчанию 10)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.SwaggerLeaderboardResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/leaderboard/extended": {
            "get": {
                "description": "Возвращает расширенную таблицу лидеров с информацией о времени, затраченном на уроки",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leaderboard"
                ],
                "summary": "Расширенная таблица лидеров",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Максимальное количество записей (по умолчанию 10)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.SwaggerExtendedLeaderboardResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/leaderboard/lesson/{lesson_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Возвращает таблицу лидеров для конкретного урока и позицию пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leaderboard"
                ],
                "summary": "Таблица лидеров урока",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID урока",
                        "name": "lesson_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Максимальное количество записей (по умолчанию 10)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.SwaggerLessonLeaderboardResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/lessons": {
            "get": {
                "description": "Возвращает список уроков определенного типа",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "lessons"
                ],
                "summary": "Получение уроков по типу",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Тип урока",
                        "name": "type",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.SwaggerLessonsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/lessons/complete": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Обновляет статистику пользователя при завершении урока и возвращает лидерборд по уроку",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "lessons"
                ],
                "summary": "Завершение урока",
                "parameters": [
                    {
                        "description": "Данные о прохождении урока",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.CompleteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.CompleteLessonResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/lessons/{id}": {
            "get": {
                "description": "Возвращает детальную информацию об уроке по его ID, включая полные данные урока",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "lessons"
                ],
                "summary": "Получение детальной информации урока",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID урока",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.SwaggerLessonResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controller.CompleteLessonResponse": {
            "type": "object",
            "properties": {
                "completedTime": {
                    "description": "Время завершения урока в секундах",
                    "type": "integer"
                },
                "earnedXP": {
                    "description": "Заработанный опыт за текущий урок",
                    "type": "integer"
                },
                "experience": {
                    "description": "Текущий опыт пользователя",
                    "type": "integer"
                },
                "leaderboard": {
                    "description": "Лидерборд по уроку",
                    "type": "object",
                    "properties": {
                        "entries": {
                            "description": "Записи лидерборда",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/repository.LessonLeaderboardEntry"
                            }
                        },
                        "totalUsers": {
                            "description": "Общее количество пользователей",
                            "type": "integer"
                        },
                        "userPosition": {
                            "description": "Позиция пользователя",
                            "type": "integer"
                        }
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "controller.CompleteRequest": {
            "type": "object",
            "properties": {
                "completionTime": {
                    "description": "Время в секундах",
                    "type": "integer"
                },
                "earnedExperience": {
                    "type": "integer"
                },
                "lessonId": {
                    "type": "string"
                }
            }
        },
        "controller.SwaggerExtendedLeaderboardResponse": {
            "description": "Ответ с расширенной таблицей лидеров",
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "average_time_spent": {
                                "type": "string",
                                "example": "03:56"
                            },
                            "experience": {
                                "type": "integer",
                                "example": 1500
                            },
                            "first_name": {
                                "type": "string",
                                "example": "John"
                            },
                            "last_name": {
                                "type": "string",
                                "example": "Doe"
                            },
                            "position": {
                                "type": "integer",
                                "example": 1
                            },
                            "total_lessons": {
                                "type": "integer",
                                "example": 15
                            },
                            "total_time_spent": {
                                "type": "integer",
                                "example": 3540
                            },
                            "trend": {
                                "type": "string",
                                "example": "up"
                            },
                            "user_id": {
                                "type": "integer",
                                "example": 1
                            },
                            "username": {
                                "type": "string",
                                "example": "johndoe"
                            }
                        }
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "controller.SwaggerLeaderboardResponse": {
            "description": "Ответ с таблицей лидеров",
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "experience": {
                                "type": "integer",
                                "example": 1500
                            },
                            "first_name": {
                                "type": "string",
                                "example": "John"
                            },
                            "last_name": {
                                "type": "string",
                                "example": "Doe"
                            },
                            "position": {
                                "type": "integer",
                                "example": 1
                            },
                            "trend": {
                                "type": "string",
                                "example": "up"
                            },
                            "user_id": {
                                "type": "integer",
                                "example": 1
                            },
                            "username": {
                                "type": "string",
                                "example": "johndoe"
                            }
                        }
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "controller.SwaggerLessonLeaderboardResponse": {
            "description": "Ответ с таблицей лидеров конкретного урока",
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "entries": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "completion_time": {
                                        "description": "Время прохождения урока в секундах",
                                        "type": "integer",
                                        "example": 85
                                    },
                                    "experience": {
                                        "type": "integer",
                                        "example": 120
                                    },
                                    "first_name": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "position": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "score": {
                                        "type": "integer",
                                        "example": 85
                                    },
                                    "trend": {
                                        "type": "string",
                                        "example": "up"
                                    },
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "username": {
                                        "type": "string",
                                        "example": "johndoe"
                                    }
                                }
                            }
                        },
                        "total_users": {
                            "type": "integer",
                            "example": 50
                        },
                        "user_position": {
                            "type": "integer",
                            "example": 3
                        }
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "controller.SwaggerLessonResponse": {
            "description": "Ответ с данными одного урока",
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/service.Lesson"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "controller.SwaggerLessonsResponse": {
            "description": "Ответ со списком уроков",
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.LessonByType"
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "controller.SwaggerMessageResponse": {
            "description": "Успешный ответ с сообщением",
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "controller.SwaggerSuccessResponse": {
            "description": "Успешный ответ с сообщением для Swagger",
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "controller.SwaggerTokenResponse": {
            "description": "Успешный ответ с токеном авторизации",
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "token": {
                            "type": "string",
                            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                        }
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "controller.SwaggerUpdateUserResponse": {
            "description": "Ответ с сообщением об успешном обновлении",
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "message": {
                            "type": "string",
                            "example": "Данные пользователя успешно обновлены"
                        }
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "controller.SwaggerUserProfileWithStatsResponse": {
            "description": "Расширенный ответ с данными профиля пользователя и статистикой",
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "experience": {
                            "type": "integer",
                            "example": 1250
                        },
                        "first_name": {
                            "type": "string",
                            "example": "John"
                        },
                        "id": {
                            "type": "integer",
                            "example": 1
                        },
                        "last_name": {
                            "type": "string",
                            "example": "Doe"
                        },
                        "stats": {
                            "type": "object",
                            "properties": {
                                "average_completion": {
                                    "type": "number",
                                    "example": 120.5
                                },
                                "average_experience": {
                                    "type": "number",
                                    "example": 83.33
                                },
                                "fastest_completion": {
                                    "type": "integer",
                                    "example": 85
                                },
                                "max_experience": {
                                    "type": "integer",
                                    "example": 150
                                },
                                "total_experience": {
                                    "type": "integer",
                                    "example": 1250
                                },
                                "total_lessons": {
                                    "type": "integer",
                                    "example": 15
                                }
                            }
                        },
                        "username": {
                            "type": "string",
                            "example": "johndoe"
                        }
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "controller.loginRequest": {
            "description": "Запрос на вход в систему",
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "example": "secret123"
                },
                "username": {
                    "type": "string",
                    "example": "johndoe"
                }
            }
        },
        "controller.registerRequest": {
            "description": "Запрос на регистрацию нового пользователя",
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "first_name": {
                    "type": "string",
                    "example": "John"
                },
                "last_name": {
                    "type": "string",
                    "example": "Doe"
                },
                "password": {
                    "type": "string",
                    "minLength": 6,
                    "example": "secret123"
                },
                "username": {
                    "type": "string",
                    "minLength": 3,
                    "example": "johndoe"
                }
            }
        },
        "controller.updateUserRequest": {
            "description": "Запрос на обновление данных пользователя",
            "type": "object",
            "properties": {
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                }
            }
        },
        "repository.LessonLeaderboardEntry": {
            "type": "object",
            "properties": {
                "completion_time": {
                    "description": "Время прохождения урока в секундах",
                    "type": "integer"
                },
                "experience": {
                    "description": "Полученный опыт",
                    "type": "integer"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "position": {
                    "type": "integer"
                },
                "score": {
                    "description": "Баллы за урок (время в секундах)",
                    "type": "integer"
                },
                "trend": {
                    "description": "Тренд изменения позиции",
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "responses.ErrorInfo": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "responses.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/responses.ErrorInfo"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "service.Lesson": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "lesson_data": {
                    "type": "object",
                    "additionalProperties": true
                },
                "level": {
                    "type": "integer"
                },
                "mode": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "service.LessonByType": {
            "type": "object",
            "properties": {
                "easyId": {
                    "type": "integer"
                },
                "hardId": {
                    "type": "integer"
                },
                "level": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer \u003ctoken\u003e\"",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "RAVR Backend API",
	Description:      "JWT Authorization header using the Bearer scheme. Example: \"Authorization",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
