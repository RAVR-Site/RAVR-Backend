basePath: /api/v1
definitions:
  controller.CompleteLessonResponse:
    properties:
      completedTime:
        description: Время завершения урока в секундах
        type: integer
      earnedXP:
        description: Заработанный опыт за текущий урок
        type: integer
      experience:
        description: Текущий опыт пользователя
        type: integer
      leaderboard:
        description: Лидерборд по уроку
        properties:
          entries:
            description: Записи лидерборда
            items:
              $ref: '#/definitions/repository.LessonLeaderboardEntry'
            type: array
          totalUsers:
            description: Общее количество пользователей
            type: integer
          userPosition:
            description: Позиция пользователя
            type: integer
        type: object
      success:
        type: boolean
    type: object
  controller.CompleteRequest:
    properties:
      completionTime:
        description: Время в секундах
        type: integer
      earnedExperience:
        type: integer
      lessonId:
        type: string
    type: object
  controller.SwaggerExtendedLeaderboardResponse:
    description: Ответ с расширенной таблицей лидеров
    properties:
      data:
        items:
          properties:
            average_time_spent:
              example: "03:56"
              type: string
            experience:
              example: 1500
              type: integer
            first_name:
              example: John
              type: string
            last_name:
              example: Doe
              type: string
            position:
              example: 1
              type: integer
            total_lessons:
              example: 15
              type: integer
            total_time_spent:
              example: 3540
              type: integer
            trend:
              example: up
              type: string
            user_id:
              example: 1
              type: integer
            username:
              example: johndoe
              type: string
          type: object
        type: array
      success:
        example: true
        type: boolean
    type: object
  controller.SwaggerLeaderboardResponse:
    description: Ответ с таблицей лидеров
    properties:
      data:
        items:
          properties:
            experience:
              example: 1500
              type: integer
            first_name:
              example: John
              type: string
            last_name:
              example: Doe
              type: string
            position:
              example: 1
              type: integer
            trend:
              example: up
              type: string
            user_id:
              example: 1
              type: integer
            username:
              example: johndoe
              type: string
          type: object
        type: array
      success:
        example: true
        type: boolean
    type: object
  controller.SwaggerLessonLeaderboardResponse:
    description: Ответ с таблицей лидеров конкретного урока
    properties:
      data:
        properties:
          entries:
            items:
              properties:
                completion_time:
                  description: Время прохождения урока в секундах
                  example: 85
                  type: integer
                experience:
                  example: 120
                  type: integer
                first_name:
                  example: John
                  type: string
                last_name:
                  example: Doe
                  type: string
                position:
                  example: 1
                  type: integer
                score:
                  example: 85
                  type: integer
                trend:
                  example: up
                  type: string
                user_id:
                  example: 1
                  type: integer
                username:
                  example: johndoe
                  type: string
              type: object
            type: array
          total_users:
            example: 50
            type: integer
          user_position:
            example: 3
            type: integer
        type: object
      success:
        example: true
        type: boolean
    type: object
  controller.SwaggerLessonResponse:
    description: Ответ с данными одного урока
    properties:
      data:
        $ref: '#/definitions/service.Lesson'
      success:
        example: true
        type: boolean
    type: object
  controller.SwaggerLessonsResponse:
    description: Ответ со списком уроков
    properties:
      data:
        items:
          $ref: '#/definitions/service.LessonByType'
        type: array
      success:
        example: true
        type: boolean
    type: object
  controller.SwaggerMessageResponse:
    description: Успешный ответ с сообщением
    properties:
      data:
        additionalProperties:
          type: string
        type: object
      success:
        example: true
        type: boolean
    type: object
  controller.SwaggerSuccessResponse:
    description: Успешный ответ с сообщением для Swagger
    properties:
      data:
        additionalProperties:
          type: string
        type: object
      success:
        example: true
        type: boolean
    type: object
  controller.SwaggerTokenResponse:
    description: Успешный ответ с токеном авторизации
    properties:
      data:
        properties:
          token:
            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
            type: string
        type: object
      success:
        example: true
        type: boolean
    type: object
  controller.SwaggerUpdateUserResponse:
    description: Ответ с сообщением об успешном обновлении
    properties:
      data:
        properties:
          message:
            example: Данные пользователя успешно обновлены
            type: string
        type: object
      success:
        example: true
        type: boolean
    type: object
  controller.SwaggerUserProfileWithStatsResponse:
    description: Расширенный ответ с данными профиля пользователя и статистикой
    properties:
      data:
        properties:
          experience:
            example: 1250
            type: integer
          first_name:
            example: John
            type: string
          id:
            example: 1
            type: integer
          last_name:
            example: Doe
            type: string
          stats:
            properties:
              average_completion:
                example: 120.5
                type: number
              average_experience:
                example: 83.33
                type: number
              fastest_completion:
                example: 85
                type: integer
              max_experience:
                example: 150
                type: integer
              total_experience:
                example: 1250
                type: integer
              total_lessons:
                example: 15
                type: integer
            type: object
          username:
            example: johndoe
            type: string
        type: object
      success:
        example: true
        type: boolean
    type: object
  controller.loginRequest:
    description: Запрос на вход в систему
    properties:
      password:
        example: secret123
        type: string
      username:
        example: johndoe
        type: string
    required:
    - password
    - username
    type: object
  controller.registerRequest:
    description: Запрос на регистрацию нового пользователя
    properties:
      first_name:
        example: John
        type: string
      last_name:
        example: Doe
        type: string
      password:
        example: secret123
        minLength: 6
        type: string
      username:
        example: johndoe
        minLength: 3
        type: string
    required:
    - password
    - username
    type: object
  controller.updateUserRequest:
    description: Запрос на обновление данных пользователя
    properties:
      first_name:
        type: string
      last_name:
        type: string
    type: object
  repository.LessonLeaderboardEntry:
    properties:
      completion_time:
        description: Время прохождения урока в секундах
        type: integer
      experience:
        description: Полученный опыт
        type: integer
      first_name:
        type: string
      last_name:
        type: string
      position:
        type: integer
      score:
        description: Баллы за урок (время в секундах)
        type: integer
      trend:
        description: Тренд изменения позиции
        type: string
      user_id:
        type: integer
      username:
        type: string
    type: object
  responses.ErrorInfo:
    properties:
      code:
        type: string
      message:
        type: string
    type: object
  responses.ErrorResponse:
    properties:
      error:
        $ref: '#/definitions/responses.ErrorInfo'
      success:
        type: boolean
    type: object
  service.Lesson:
    properties:
      id:
        type: integer
      lesson_data:
        additionalProperties: true
        type: object
      level:
        type: integer
      mode:
        type: string
      type:
        type: string
    type: object
  service.LessonByType:
    properties:
      easyId:
        type: integer
      hardId:
        type: integer
      level:
        type: integer
    type: object
host: localhost:8080
info:
  contact:
    email: support@ravr-site.io
    name: API Support
    url: http://www.ravr-site.io/support
  description: 'JWT Authorization header using the Bearer scheme. Example: "Authorization'
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: RAVR Backend API
  version: "1.0"
paths:
  /api/v1/admin/leaderboard/update:
    post:
      consumes:
      - application/json
      description: Обновляет рейтинги пользователей за указанный период (weekly, monthly)
      parameters:
      - default: weekly
        description: Период (daily, weekly, monthly)
        in: query
        name: period
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.SwaggerSuccessResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Обновление рейтингов
      tags:
      - leaderboard
  /auth/login:
    post:
      consumes:
      - application/json
      description: Аутентифицирует пользователя и возвращает JWT токен
      parameters:
      - description: Учетные данные
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controller.loginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.SwaggerTokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Вход в систему
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Создает нового пользователя с указанными учетными данными
      parameters:
      - description: Данные для регистрации
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controller.registerRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/controller.SwaggerMessageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Регистрация нового пользователя
      tags:
      - auth
  /auth/user:
    get:
      consumes:
      - application/json
      description: Возвращает данные текущего аутентифицированного пользователя с
        статистикой
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.SwaggerUserProfileWithStatsResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Профиль пользователя
      tags:
      - auth
    put:
      consumes:
      - application/json
      description: Обновляет имя и фамилию текущего аутентифицированного пользователя
      parameters:
      - description: Данные для обновления
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controller.updateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.SwaggerUpdateUserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Обновление данных пользователя
      tags:
      - auth
  /leaderboard:
    get:
      consumes:
      - application/json
      description: Возвращает список пользователей, отсортированных по опыту, с изменением
        позиции
      parameters:
      - default: 10
        description: Максимальное количество записей (по умолчанию 10)
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.SwaggerLeaderboardResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Таблица лидеров
      tags:
      - leaderboard
  /leaderboard/extended:
    get:
      consumes:
      - application/json
      description: Возвращает расширенную таблицу лидеров с информацией о времени,
        затраченном на уроки
      parameters:
      - default: 10
        description: Максимальное количество записей (по умолчанию 10)
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.SwaggerExtendedLeaderboardResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Расширенная таблица лидеров
      tags:
      - leaderboard
  /leaderboard/lesson/{lesson_id}:
    get:
      consumes:
      - application/json
      description: Возвращает таблицу лидеров для конкретного урока и позицию пользователя
      parameters:
      - description: ID урока
        in: path
        name: lesson_id
        required: true
        type: string
      - default: 10
        description: Максимальное количество записей (по умолчанию 10)
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.SwaggerLessonLeaderboardResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Таблица лидеров урока
      tags:
      - leaderboard
  /lessons:
    get:
      consumes:
      - application/json
      description: Возвращает список уроков определенного типа
      parameters:
      - description: Тип урока
        in: query
        name: type
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.SwaggerLessonsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Получение уроков по типу
      tags:
      - lessons
  /lessons/{id}:
    get:
      consumes:
      - application/json
      description: Возвращает детальную информацию об уроке по его ID, включая полные
        данные урока
      parameters:
      - description: ID урока
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.SwaggerLessonResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Получение детальной информации урока
      tags:
      - lessons
  /lessons/complete:
    post:
      consumes:
      - application/json
      description: Обновляет статистику пользователя при завершении урока и возвращает
        лидерборд по уроку
      parameters:
      - description: Данные о прохождении урока
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controller.CompleteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.CompleteLessonResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Завершение урока
      tags:
      - lessons
securityDefinitions:
  BearerAuth:
    description: 'JWT Authorization header using the Bearer scheme. Example: "Authorization:
      Bearer <token>"'
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
